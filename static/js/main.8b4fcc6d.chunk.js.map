{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","style","backgroundRepeat","backgroundColor","pageId","shadow","transform","stackItemsAnimation","properties","pos","translateZ","rotateZ","min","max","Math","floor","random","options","itemstotal","type","dynamics","bezier","duration","points","x","y","cp","delay","height","width","margin","layers","display","photos","price","productName","description","buttonText","rating","url","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gSAuLeA,G,wLA3KX,OACE,kBAAC,kBAAD,CAAiBC,UAAU,OACzB,kBAAC,gBAAD,CACEC,MAAO,CACLC,iBAAkB,YAClBC,gBAAiB,WAEnBC,OAAQ,GAER,kBAAC,IAAD,CACEC,QAAM,EACNC,UAAU,gCACVC,oBAAqB,CACnBC,WAAY,SAASC,GACnB,MAAO,CACLC,WAAwB,IAAXD,EAAM,GACnBE,SAnBQC,GAmBe,EAnBVC,EAmBa,EAlB/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,IADvD,IAAsBA,EAAKC,GAsBjBI,QAAS,SAASR,EAAKS,GACrB,MAAO,CACLC,KAAMC,IAASC,OACfC,SAAU,IACVC,OAAQ,CACN,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,CAAC,CAAEF,EAAG,GAAKC,EAAG,KAChC,CAAED,EAAG,EAAGC,EAAG,EAAGC,GAAI,CAAC,CAAEF,EAAG,GAAKC,EAAG,MAElCE,MAAgC,IAAxBT,EAAaT,EAAM,MAIjCR,MAAO,CAAE2B,OAAQ,QAASC,MAAO,QAASC,OAAQ,SAElD,kBAAC,OAAD,CACEC,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,aAGJ,kBAAC,OAAD,CACEA,OAAQ,CACN,wCACA,UACA,UACA,eAMR,kBAAC,gBAAD,CACE9B,MAAO,CACLC,iBAAkB,YAClBC,gBAAiB,UACjB6B,QAAS,QAEX5B,OAAQ,GAER,yBAAKH,MAAO,CAAE+B,QAAS,cAAeF,OAAQ,SAC5C,kBAAC,cAAD,CACEG,OAAQ,CACN,kCACA,kCACA,mCAEFC,MAAM,MACNC,YAAY,aACZC,YAAY,gHACZC,WAAW,cACXC,OAAQ,EACRC,IAAI,8BAEN,kBAAC,cAAD,CACEN,OAAQ,CACN,kCACA,kCACA,mCAEFC,MAAM,MACNC,YAAY,aACZC,YAAY,gHACZC,WAAW,cACXC,OAAQ,EACRC,IAAI,8BAEN,kBAAC,cAAD,CACEN,OAAQ,CACN,kCACA,kCACA,mCAEFC,MAAM,MACNC,YAAY,aACZC,YAAY,gHACZC,WAAW,cACXC,OAAQ,EACRC,IAAI,gCAKV,kBAAC,gBAAD,CACEtC,MAAO,CACLE,gBAAiB,UACjBD,iBAAkB,aAEpBE,OAAQ,S,GAzKAoC,IAAMC,YCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.8b4fcc6d.chunk.js","sourcesContent":["import React from \"react\";\nimport { ScrollSection, ScrollContainer } from \"react-onepage-scroll\";\nimport { ProductCard } from \"react-ui-cards\";\nimport IsometricGrid, { Cell } from \"react-isometric-grid\";\nimport dynamics from \"dynamics.js\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    return (\n      <ScrollContainer className=\"App\">\n        <ScrollSection\n          style={{\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#f4efd3\"\n          }}\n          pageId={0}\n        >\n          <IsometricGrid\n            shadow\n            transform=\"rotateX(45deg) rotateZ(45deg)\"\n            stackItemsAnimation={{\n              properties: function(pos) {\n                return {\n                  translateZ: (pos + 1) * 30,\n                  rotateZ: getRandomInt(-4, 4)\n                };\n              },\n              options: function(pos, itemstotal) {\n                return {\n                  type: dynamics.bezier,\n                  duration: 500,\n                  points: [\n                    { x: 0, y: 0, cp: [{ x: 0.2, y: 1 }] },\n                    { x: 1, y: 1, cp: [{ x: 0.3, y: 1 }] }\n                  ],\n                  delay: (itemstotal - pos - 1) * 40\n                };\n              }\n            }}\n            style={{ height: \"800px\", width: \"900px\", margin: \"auto\" }}\n          >\n            <Cell\n              layers={[\n                \"https://picsum.photos/600/600/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/300/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/400/300/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/500/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/500/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/500/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/500/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/500/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n            <Cell\n              layers={[\n                \"https://picsum.photos/200/500/?random\",\n                \"#9972fc\",\n                \"#c322a3\",\n                \"#9eb5c2\"\n              ]}\n            />\n          </IsometricGrid>\n        </ScrollSection>\n\n        <ScrollSection\n          style={{\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#f4efd3\",\n            display: \"flex\"\n          }}\n          pageId={1}\n        >\n          <div style={{ display: \"inline-flex\", margin: \"auto\" }}>\n            <ProductCard\n              photos={[\n                \"https://i.imgur.com/jRVDeI8.jpg\",\n                \"https://i.imgur.com/raPe27t.jpg\",\n                \"https://i.imgur.com/IpEsYSH.jpg\"\n              ]}\n              price=\"$99\"\n              productName=\"Headphones\"\n              description=\"Donec lectus nulla, molestie aliquam nisl vitae, tempor placerat magna. Morbi dignissim in felis vel aliquet.\"\n              buttonText=\"Add to cart\"\n              rating={3}\n              url=\"https://github.com/nukeop\"\n            />\n            <ProductCard\n              photos={[\n                \"https://i.imgur.com/jRVDeI8.jpg\",\n                \"https://i.imgur.com/raPe27t.jpg\",\n                \"https://i.imgur.com/IpEsYSH.jpg\"\n              ]}\n              price=\"$99\"\n              productName=\"Headphones\"\n              description=\"Donec lectus nulla, molestie aliquam nisl vitae, tempor placerat magna. Morbi dignissim in felis vel aliquet.\"\n              buttonText=\"Add to cart\"\n              rating={3}\n              url=\"https://github.com/nukeop\"\n            />\n            <ProductCard\n              photos={[\n                \"https://i.imgur.com/jRVDeI8.jpg\",\n                \"https://i.imgur.com/raPe27t.jpg\",\n                \"https://i.imgur.com/IpEsYSH.jpg\"\n              ]}\n              price=\"$99\"\n              productName=\"Headphones\"\n              description=\"Donec lectus nulla, molestie aliquam nisl vitae, tempor placerat magna. Morbi dignissim in felis vel aliquet.\"\n              buttonText=\"Add to cart\"\n              rating={3}\n              url=\"https://github.com/nukeop\"\n            />\n          </div>\n        </ScrollSection>\n\n        <ScrollSection\n          style={{\n            backgroundColor: \"#f4efd3\",\n            backgroundRepeat: \"no-repeat\"\n          }}\n          pageId={2}\n        ></ScrollSection>\n      </ScrollContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}